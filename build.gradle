plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'product-service'
version = '0.0.1-SNAPSHOT'
description = 'ProductService'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2025.0.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.modelmapper.extensions:modelmapper-spring:3.1.1'

        compileOnly 'org.projectlombok:lombok:1.18.34'
        annotationProcessor 'org.projectlombok:lombok:1.18.34'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // MapStruct API
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'

    // MapStruct processor (annotation processor generates code)
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // If using Lombok also
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

    // Spring Boot typical deps...
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0"

    // Redis + Spring Cache
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // Micrometer for cache metrics
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'


    // Logging: Logback JSON encoder (optional) for structured logs
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
